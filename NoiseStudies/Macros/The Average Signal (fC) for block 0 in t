The Average Signal (fC) for block 0 in the pos RPD for 40 - 49.5% Centrality in bin number 1 is 147.143
The Average Signal (fC) for block 0 in the pos RPD for 40 - 49.5% Centrality in bin number 2 is 145.127
The Average Signal (fC) for block 0 in the pos RPD for 40 - 49.5% Centrality in bin number 3 is 14995.4
The Average Signal (fC) for block 0 in the pos RPD for 40 - 49.5% Centrality in bin number 4 is 7932.08
The Average Signal (fC) for block 0 in the pos RPD for 40 - 49.5% Centrality in bin number 5 is 3720.8
The Average Signal (fC) for block 0 in the pos RPD for 40 - 49.5% Centrality in bin number 6 is 2195.76

The Average Signal (fC) for block 1 in the pos RPD for 40 - 49.5% Centrality in bin number 1 is 380.978
The Average Signal (fC) for block 1 in the pos RPD for 40 - 49.5% Centrality in bin number 2 is 435.401
The Average Signal (fC) for block 1 in the pos RPD for 40 - 49.5% Centrality in bin number 3 is 36858.6
The Average Signal (fC) for block 1 in the pos RPD for 40 - 49.5% Centrality in bin number 4 is 17095.9
The Average Signal (fC) for block 1 in the pos RPD for 40 - 49.5% Centrality in bin number 5 is 8072.46
The Average Signal (fC) for block 1 in the pos RPD for 40 - 49.5% Centrality in bin number 6 is 4652.73

The Average Signal (fC) for block 2 in the pos RPD for 40 - 49.5% Centrality in bin number 1 is 37.4747
The Average Signal (fC) for block 2 in the pos RPD for 40 - 49.5% Centrality in bin number 2 is 37.1713
The Average Signal (fC) for block 2 in the pos RPD for 40 - 49.5% Centrality in bin number 3 is 1.81784
The Average Signal (fC) for block 2 in the pos RPD for 40 - 49.5% Centrality in bin number 4 is 129.95
The Average Signal (fC) for block 2 in the pos RPD for 40 - 49.5% Centrality in bin number 5 is 109.056
The Average Signal (fC) for block 2 in the pos RPD for 40 - 49.5% Centrality in bin number 6 is 63.6256

The Average Signal (fC) for block 3 in the pos RPD for 40 - 49.5% Centrality in bin number 1 is 959.166
The Average Signal (fC) for block 3 in the pos RPD for 40 - 49.5% Centrality in bin number 2 is 761.993
The Average Signal (fC) for block 3 in the pos RPD for 40 - 49.5% Centrality in bin number 3 is 62563.4
The Average Signal (fC) for block 3 in the pos RPD for 40 - 49.5% Centrality in bin number 4 is 35678.9
The Average Signal (fC) for block 3 in the pos RPD for 40 - 49.5% Centrality in bin number 5 is 16918.9
The Average Signal (fC) for block 3 in the pos RPD for 40 - 49.5% Centrality in bin number 6 is 9697.76

The Average Signal (fC) for block 4 in the pos RPD for 40 - 49.5% Centrality in bin number 1 is 163.596
The Average Signal (fC) for block 4 in the pos RPD for 40 - 49.5% Centrality in bin number 2 is 154.269
The Average Signal (fC) for block 4 in the pos RPD for 40 - 49.5% Centrality in bin number 3 is 19134.5
The Average Signal (fC) for block 4 in the pos RPD for 40 - 49.5% Centrality in bin number 4 is 10198.1
The Average Signal (fC) for block 4 in the pos RPD for 40 - 49.5% Centrality in bin number 5 is 4679.62
The Average Signal (fC) for block 4 in the pos RPD for 40 - 49.5% Centrality in bin number 6 is 2691.11

The Average Signal (fC) for block 5 in the pos RPD for 40 - 49.5% Centrality in bin number 1 is 579.431
The Average Signal (fC) for block 5 in the pos RPD for 40 - 49.5% Centrality in bin number 2 is 1076.18
The Average Signal (fC) for block 5 in the pos RPD for 40 - 49.5% Centrality in bin number 3 is 60530.7
The Average Signal (fC) for block 5 in the pos RPD for 40 - 49.5% Centrality in bin number 4 is 28517.5
The Average Signal (fC) for block 5 in the pos RPD for 40 - 49.5% Centrality in bin number 5 is 13354.7
The Average Signal (fC) for block 5 in the pos RPD for 40 - 49.5% Centrality in bin number 6 is 7662.34

The Average Signal (fC) for block 6 in the pos RPD for 40 - 49.5% Centrality in bin number 1 is 1921.63
The Average Signal (fC) for block 6 in the pos RPD for 40 - 49.5% Centrality in bin number 2 is 1492.21
The Average Signal (fC) for block 6 in the pos RPD for 40 - 49.5% Centrality in bin number 3 is 113703
The Average Signal (fC) for block 6 in the pos RPD for 40 - 49.5% Centrality in bin number 4 is 74737.3
The Average Signal (fC) for block 6 in the pos RPD for 40 - 49.5% Centrality in bin number 5 is 35999.4
The Average Signal (fC) for block 6 in the pos RPD for 40 - 49.5% Centrality in bin number 6 is 20369.8

The Average Signal (fC) for block 7 in the pos RPD for 40 - 49.5% Centrality in bin number 1 is 1452
The Average Signal (fC) for block 7 in the pos RPD for 40 - 49.5% Centrality in bin number 2 is 1095.39
The Average Signal (fC) for block 7 in the pos RPD for 40 - 49.5% Centrality in bin number 3 is 84154.3
The Average Signal (fC) for block 7 in the pos RPD for 40 - 49.5% Centrality in bin number 4 is 49482.3
The Average Signal (fC) for block 7 in the pos RPD for 40 - 49.5% Centrality in bin number 5 is 23673.1
The Average Signal (fC) for block 7 in the pos RPD for 40 - 49.5% Centrality in bin number 6 is 13477.5

The Average Signal (fC) for block 8 in the pos RPD for 40 - 49.5% Centrality in bin number 1 is 220.097
The Average Signal (fC) for block 8 in the pos RPD for 40 - 49.5% Centrality in bin number 2 is 194.477
The Average Signal (fC) for block 8 in the pos RPD for 40 - 49.5% Centrality in bin number 3 is 29194.7
The Average Signal (fC) for block 8 in the pos RPD for 40 - 49.5% Centrality in bin number 4 is 16073
The Average Signal (fC) for block 8 in the pos RPD for 40 - 49.5% Centrality in bin number 5 is 7288.8
The Average Signal (fC) for block 8 in the pos RPD for 40 - 49.5% Centrality in bin number 6 is 4196.32

The Average Signal (fC) for block 9 in the pos RPD for 40 - 49.5% Centrality in bin number 1 is 392.217
The Average Signal (fC) for block 9 in the pos RPD for 40 - 49.5% Centrality in bin number 2 is 441.064
The Average Signal (fC) for block 9 in the pos RPD for 40 - 49.5% Centrality in bin number 3 is 50016.9
The Average Signal (fC) for block 9 in the pos RPD for 40 - 49.5% Centrality in bin number 4 is 24210.3
The Average Signal (fC) for block 9 in the pos RPD for 40 - 49.5% Centrality in bin number 5 is 11124
The Average Signal (fC) for block 9 in the pos RPD for 40 - 49.5% Centrality in bin number 6 is 6305.54

The Average Signal (fC) for block 10 in the pos RPD for 40 - 49.5% Centrality in bin number 1 is 1847.52
The Average Signal (fC) for block 10 in the pos RPD for 40 - 49.5% Centrality in bin number 2 is 1389.45
The Average Signal (fC) for block 10 in the pos RPD for 40 - 49.5% Centrality in bin number 3 is 129558
The Average Signal (fC) for block 10 in the pos RPD for 40 - 49.5% Centrality in bin number 4 is 90445.9
The Average Signal (fC) for block 10 in the pos RPD for 40 - 49.5% Centrality in bin number 5 is 44504.6
The Average Signal (fC) for block 10 in the pos RPD for 40 - 49.5% Centrality in bin number 6 is 24964

The Average Signal (fC) for block 11 in the pos RPD for 40 - 49.5% Centrality in bin number 1 is 1826.71
The Average Signal (fC) for block 11 in the pos RPD for 40 - 49.5% Centrality in bin number 2 is 1335.86
The Average Signal (fC) for block 11 in the pos RPD for 40 - 49.5% Centrality in bin number 3 is 121177
The Average Signal (fC) for block 11 in the pos RPD for 40 - 49.5% Centrality in bin number 4 is 82535.9
The Average Signal (fC) for block 11 in the pos RPD for 40 - 49.5% Centrality in bin number 5 is 40852.6
The Average Signal (fC) for block 11 in the pos RPD for 40 - 49.5% Centrality in bin number 6 is 23249.9

The Average Signal (fC) for block 12 in the pos RPD for 40 - 49.5% Centrality in bin number 1 is 201.739
The Average Signal (fC) for block 12 in the pos RPD for 40 - 49.5% Centrality in bin number 2 is 171.337
The Average Signal (fC) for block 12 in the pos RPD for 40 - 49.5% Centrality in bin number 3 is 30118.5
The Average Signal (fC) for block 12 in the pos RPD for 40 - 49.5% Centrality in bin number 4 is 17030.7
The Average Signal (fC) for block 12 in the pos RPD for 40 - 49.5% Centrality in bin number 5 is 7790.15
The Average Signal (fC) for block 12 in the pos RPD for 40 - 49.5% Centrality in bin number 6 is 4375.91

The Average Signal (fC) for block 13 in the pos RPD for 40 - 49.5% Centrality in bin number 1 is 456.519
The Average Signal (fC) for block 13 in the pos RPD for 40 - 49.5% Centrality in bin number 2 is 409.72
The Average Signal (fC) for block 13 in the pos RPD for 40 - 49.5% Centrality in bin number 3 is 60636.7
The Average Signal (fC) for block 13 in the pos RPD for 40 - 49.5% Centrality in bin number 4 is 31491.2
The Average Signal (fC) for block 13 in the pos RPD for 40 - 49.5% Centrality in bin number 5 is 14331.7
The Average Signal (fC) for block 13 in the pos RPD for 40 - 49.5% Centrality in bin number 6 is 8025.42

The Average Signal (fC) for block 14 in the pos RPD for 40 - 49.5% Centrality in bin number 1 is 1386.61
The Average Signal (fC) for block 14 in the pos RPD for 40 - 49.5% Centrality in bin number 2 is 1018.22
The Average Signal (fC) for block 14 in the pos RPD for 40 - 49.5% Centrality in bin number 3 is 118325
The Average Signal (fC) for block 14 in the pos RPD for 40 - 49.5% Centrality in bin number 4 is 82195.5
The Average Signal (fC) for block 14 in the pos RPD for 40 - 49.5% Centrality in bin number 5 is 39950.2
The Average Signal (fC) for block 14 in the pos RPD for 40 - 49.5% Centrality in bin number 6 is 22298.1

The Average Signal (fC) for block 15 in the pos RPD for 40 - 49.5% Centrality in bin number 1 is 1369.39
The Average Signal (fC) for block 15 in the pos RPD for 40 - 49.5% Centrality in bin number 2 is 947.335
The Average Signal (fC) for block 15 in the pos RPD for 40 - 49.5% Centrality in bin number 3 is 105180
The Average Signal (fC) for block 15 in the pos RPD for 40 - 49.5% Centrality in bin number 4 is 70619.3
The Average Signal (fC) for block 15 in the pos RPD for 40 - 49.5% Centrality in bin number 5 is 33355.7
The Average Signal (fC) for block 15 in the pos RPD for 40 - 49.5% Centrality in bin number 6 is 18399.7


// 16 for the blocks, 3 for the ratio of 0 to 1, 2 to 3, and 4 to 5
    TH1F *pRPD_RatioDist[16][3] = {0};

        pRPD_RatioDist[0][0] = new TH1F("","Run 374810 pos RPD Block 0 Ratio TS0 to TS1, 40 to 50% Centrality",30,0,3);
        pRPD_RatioDist[1][0] = new TH1F("","Run 374810 pos RPD Block 1 Ratio TS0 to TS1, 40 to 50% Centrality",30,0,3);
        pRPD_RatioDist[2][0] = new TH1F("","Run 374810 pos RPD Block 2 Ratio TS0 to TS1, 40 to 50% Centrality",30,0,3);
        pRPD_RatioDist[3][0] = new TH1F("","Run 374810 pos RPD Block 3 Ratio TS0 to TS1, 40 to 50% Centrality",30,0,3);
        pRPD_RatioDist[4][0] = new TH1F("","Run 374810 pos RPD Block 4 Ratio TS0 to TS1, 40 to 50% Centrality",30,0,3);
        pRPD_RatioDist[5][0] = new TH1F("","Run 374810 pos RPD Block 5 Ratio TS0 to TS1, 40 to 50% Centrality",30,0,3);
        pRPD_RatioDist[6][0] = new TH1F("","Run 374810 pos RPD Block 6 Ratio TS0 to TS1, 40 to 50% Centrality",30,0,3);
        pRPD_RatioDist[7][0] = new TH1F("","Run 374810 pos RPD Block 7 Ratio TS0 to TS1, 40 to 50% Centrality",30,0,3);
        pRPD_RatioDist[8][0] = new TH1F("","Run 374810 pos RPD Block 8 Ratio TS0 to TS1, 40 to 50% Centrality",30,0,3);
        pRPD_RatioDist[9][0] = new TH1F("","Run 374810 pos RPD Block 9 Ratio TS0 to TS1, 40 to 50% Centrality",30,0,3);
        pRPD_RatioDist[10][0] = new TH1F("","Run 374810 pos RPD Block 10 Ratio TS0 to TS1, 40 to 50% Centrality",30,0,3);
        pRPD_RatioDist[11][0] = new TH1F("","Run 374810 pos RPD Block 11 Ratio TS0 to TS1, 40 to 50% Centrality",30,0,3);
        pRPD_RatioDist[12][0] = new TH1F("","Run 374810 pos RPD Block 12 Ratio TS0 to TS1, 40 to 50% Centrality",30,0,3);
        pRPD_RatioDist[13][0] = new TH1F("","Run 374810 pos RPD Block 13 Ratio TS0 to TS1, 40 to 50% Centrality",30,0,3);
        pRPD_RatioDist[14][0] = new TH1F("","Run 374810 pos RPD Block 14 Ratio TS0 to TS1, 40 to 50% Centrality",30,0,3);
        pRPD_RatioDist[15][0] = new TH1F("","Run 374810 pos RPD Block 15 Ratio TS0 to TS1, 40 to 50% Centrality",30,0,3);

        pRPD_RatioDist[0][1] = new TH1F("","Run 374810 pos RPD Block 0 Ratio TS2 to TS3, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[1][1] = new TH1F("","Run 374810 pos RPD Block 1 Ratio TS2 to TS3, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[2][1] = new TH1F("","Run 374810 pos RPD Block 2 Ratio TS2 to TS3, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[3][1] = new TH1F("","Run 374810 pos RPD Block 3 Ratio TS2 to TS3, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[4][1] = new TH1F("","Run 374810 pos RPD Block 4 Ratio TS2 to TS3, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[5][1] = new TH1F("","Run 374810 pos RPD Block 5 Ratio TS2 to TS3, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[6][1] = new TH1F("","Run 374810 pos RPD Block 6 Ratio TS2 to TS3, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[7][1] = new TH1F("","Run 374810 pos RPD Block 7 Ratio TS2 to TS3, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[8][1] = new TH1F("","Run 374810 pos RPD Block 8 Ratio TS2 to TS3, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[9][1] = new TH1F("","Run 374810 pos RPD Block 9 Ratio TS2 to TS3, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[10][1] = new TH1F("","Run 374810 pos RPD Block 10 Ratio TS2 to TS3, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[11][1] = new TH1F("","Run 374810 pos RPD Block 11 Ratio TS2 to TS3, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[12][1] = new TH1F("","Run 374810 pos RPD Block 12 Ratio TS2 to TS3, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[13][1] = new TH1F("","Run 374810 pos RPD Block 13 Ratio TS2 to TS3, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[14][1] = new TH1F("","Run 374810 pos RPD Block 14 Ratio TS2 to TS3, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[15][1] = new TH1F("","Run 374810 pos RPD Block 15 Ratio TS2 to TS3, 40 to 50% Centrality",50,0,5);

        pRPD_RatioDist[0][2] = new TH1F("","Run 374810 pos RPD Block 0 Ratio TS4 to TS5, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[1][2] = new TH1F("","Run 374810 pos RPD Block 1 Ratio TS4 to TS5, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[2][2] = new TH1F("","Run 374810 pos RPD Block 2 Ratio TS4 to TS5, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[3][2] = new TH1F("","Run 374810 pos RPD Block 3 Ratio TS4 to TS5, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[4][2] = new TH1F("","Run 374810 pos RPD Block 4 Ratio TS4 to TS5, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[5][2] = new TH1F("","Run 374810 pos RPD Block 5 Ratio TS4 to TS5, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[6][2] = new TH1F("","Run 374810 pos RPD Block 6 Ratio TS4 to TS5, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[7][2] = new TH1F("","Run 374810 pos RPD Block 7 Ratio TS4 to TS5, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[8][2] = new TH1F("","Run 374810 pos RPD Block 8 Ratio TS4 to TS5, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[9][2] = new TH1F("","Run 374810 pos RPD Block 9 Ratio TS4 to TS5, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[10][2] = new TH1F("","Run 374810 pos RPD Block 10 Ratio TS4 to TS5, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[11][2] = new TH1F("","Run 374810 pos RPD Block 11 Ratio TS4 to TS5, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[12][2] = new TH1F("","Run 374810 pos RPD Block 12 Ratio TS4 to TS5, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[13][2] = new TH1F("","Run 374810 pos RPD Block 13 Ratio TS4 to TS5, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[14][2] = new TH1F("","Run 374810 pos RPD Block 14 Ratio TS4 to TS5, 40 to 50% Centrality",50,0,5);
        pRPD_RatioDist[15][2] = new TH1F("","Run 374810 pos RPD Block 15 Ratio TS4 to TS5, 40 to 50% Centrality",50,0,5);

    Int_t NumEvents = zdcchain->GetEntries();
    cout << "The number of events in Run 374810 is " << NumEvents << endl;
    for (int i = 0; i < NumEvents; i++)
    {
        zdcchain->GetEntry(i);
        hichain->GetEntry(i);
        if (i % 100000 == 0)
        {
            cout << "Event " << i << " has been processed, you donut" << endl;
        }
        if (hibin >= 80 && hibin <= 100)
        {
            for (int n = 0; n < 56; n++)
            {
                if (zside[n] == 1 && section[n] == 4)
                {
                    if (channel[n] == 1)
                    {
                        pRPD_ratio[10][0] = TS0[n] / TS1[n];
                        pRPD_RatioDist[10][0]->Fill(pRPD_ratio[10][0]);

                        pRPD_ratio[10][1] = TS2[n] / TS3[n];
                        pRPD_RatioDist[10][1]->Fill(pRPD_ratio[10][1]);

                        pRPD_ratio[10][2] = TS4[n] / TS5[n];
                        pRPD_RatioDist[10][2]->Fill(pRPD_ratio[10][2]);
                    }
                    if (channel[n] == 2)
                    {
                        pRPD_ratio[6][0] = TS0[n] / TS1[n];
                        pRPD_RatioDist[6][0]->Fill(pRPD_ratio[6][0]);

                        pRPD_ratio[6][1] = TS2[n] / TS3[n];
                        pRPD_RatioDist[6][1]->Fill(pRPD_ratio[6][1]);

                        pRPD_ratio[6][2] = TS4[n] / TS5[n];
                        pRPD_RatioDist[6][2]->Fill(pRPD_ratio[6][2]);
                    }
                    if (channel[n] == 3)
                    {
                        pRPD_ratio[2][0] = TS0[n] / TS1[n];
                        pRPD_RatioDist[2][0]->Fill(pRPD_ratio[2][0]);

                        pRPD_ratio[2][1] = TS2[n] / TS3[n];
                        pRPD_RatioDist[2][1]->Fill(pRPD_ratio[2][1]);

                        pRPD_ratio[2][2] = TS4[n] / TS5[n];
                        pRPD_RatioDist[2][2]->Fill(pRPD_ratio[2][2]);
                    }
                    if (channel[n] == 4)
                    {
                        pRPD_ratio[14][0] = TS0[n] / TS1[n];
                        pRPD_RatioDist[14][0]->Fill(pRPD_ratio[14][0]);

                        pRPD_ratio[14][1] = TS2[n] / TS3[n];
                        pRPD_RatioDist[14][1]->Fill(pRPD_ratio[14][1]);

                        pRPD_ratio[14][2] = TS4[n] / TS5[n];
                        pRPD_RatioDist[14][2]->Fill(pRPD_ratio[14][2]);
                    }
                    if (channel[n] == 5)
                    {
                        pRPD_ratio[11][0] = TS0[n] / TS1[n];
                        pRPD_RatioDist[11][0]->Fill(pRPD_ratio[11][0]);

                        pRPD_ratio[11][1] = TS2[n] / TS3[n];
                        pRPD_RatioDist[11][1]->Fill(pRPD_ratio[11][1]);

                        pRPD_ratio[11][2] = TS4[n] / TS5[n];
                        pRPD_RatioDist[11][2]->Fill(pRPD_ratio[11][2]);
                    }
                    if (channel[n] == 6)
                    {
                        pRPD_ratio[7][0] = TS0[n] / TS1[n];
                        pRPD_RatioDist[7][0]->Fill(pRPD_ratio[7][0]);

                        pRPD_ratio[7][1] = TS2[n] / TS3[n];
                        pRPD_RatioDist[7][1]->Fill(pRPD_ratio[7][1]);

                        pRPD_ratio[7][2] = TS4[n] / TS5[n];
                        pRPD_RatioDist[7][2]->Fill(pRPD_ratio[7][2]);
                    }
                    if (channel[n] == 7)
                    {
                        pRPD_ratio[3][0] = TS0[n] / TS1[n];
                        pRPD_RatioDist[3][0]->Fill(pRPD_ratio[3][0]);

                        pRPD_ratio[3][1] = TS2[n] / TS3[n];
                        pRPD_RatioDist[3][1]->Fill(pRPD_ratio[3][1]);

                        pRPD_ratio[3][2] = TS4[n] / TS5[n];
                        pRPD_RatioDist[3][2]->Fill(pRPD_ratio[3][2]);
                    }
                    if (channel[n] == 8)
                    {
                        pRPD_ratio[15][0] = TS0[n] / TS1[n];
                        pRPD_RatioDist[15][0]->Fill(pRPD_ratio[15][0]);

                        pRPD_ratio[15][1] = TS2[n] / TS3[n];
                        pRPD_RatioDist[15][1]->Fill(pRPD_ratio[15][1]);

                        pRPD_ratio[15][2] = TS4[n] / TS5[n];
                        pRPD_RatioDist[15][2]->Fill(pRPD_ratio[15][2]);
                    }
                    if (channel[n] == 9)
                    {
                        pRPD_ratio[4][0] = TS0[n] / TS1[n];
                        pRPD_RatioDist[4][0]->Fill(pRPD_ratio[4][0]);

                        pRPD_ratio[4][1] = TS2[n] / TS3[n];
                        pRPD_RatioDist[4][1]->Fill(pRPD_ratio[4][1]);

                        pRPD_ratio[4][2] = TS4[n] / TS5[n];
                        pRPD_RatioDist[4][2]->Fill(pRPD_ratio[4][2]);
                    }

                    if (channel[n] == 10)
                    {
                        pRPD_ratio[8][0] = TS0[n] / TS1[n];
                        pRPD_RatioDist[8][0]->Fill(pRPD_ratio[8][0]);

                        pRPD_ratio[8][1] = TS2[n] / TS3[n];
                        pRPD_RatioDist[8][1]->Fill(pRPD_ratio[8][1]);

                        pRPD_ratio[8][2] = TS4[n] / TS5[n];
                        pRPD_RatioDist[8][2]->Fill(pRPD_ratio[8][2]);
                    }

                    if (channel[n] == 11)
                    {
                        pRPD_ratio[12][0] = TS0[n] / TS1[n];
                        pRPD_RatioDist[12][0]->Fill(pRPD_ratio[12][0]);

                        pRPD_ratio[12][1] = TS2[n] / TS3[n];
                        pRPD_RatioDist[12][1]->Fill(pRPD_ratio[12][1]);

                        pRPD_ratio[12][2] = TS4[n] / TS5[n];
                        pRPD_RatioDist[12][2]->Fill(pRPD_ratio[12][2]);
                    }
                    if (channel[n] == 12)
                    {
                        pRPD_ratio[0][0] = TS0[n] / TS1[n];
                        pRPD_RatioDist[0][0]->Fill(pRPD_ratio[0][0]);

                        pRPD_ratio[0][1] = TS2[n] / TS3[n];
                        pRPD_RatioDist[0][1]->Fill(pRPD_ratio[0][1]);

                        pRPD_ratio[0][2] = TS4[n] / TS5[n];
                        pRPD_RatioDist[0][2]->Fill(pRPD_ratio[0][2]);
                    }
                    if (channel[n] == 13)
                    {
                        pRPD_ratio[5][0] = TS0[n] / TS1[n];
                        pRPD_RatioDist[5][0]->Fill(pRPD_ratio[5][0]);

                        pRPD_ratio[5][1] = TS2[n] / TS3[n];
                        pRPD_RatioDist[5][1]->Fill(pRPD_ratio[5][1]);

                        pRPD_ratio[5][2] = TS4[n] / TS5[n];
                        pRPD_RatioDist[5][2]->Fill(pRPD_ratio[5][2]);
                    }
                    if (channel[n] == 14)
                    {
                        pRPD_ratio[9][0] = TS0[n] / TS1[n];
                        pRPD_RatioDist[9][0]->Fill(pRPD_ratio[9][0]);

                        pRPD_ratio[9][1] = TS2[n] / TS3[n];
                        pRPD_RatioDist[9][1]->Fill(pRPD_ratio[9][1]);

                        pRPD_ratio[9][2] = TS4[n] / TS5[n];
                        pRPD_RatioDist[9][2]->Fill(pRPD_ratio[9][2]);
                    }
                    if (channel[n] == 15)
                    {
                        pRPD_ratio[13][0] = TS0[n] / TS1[n];
                        pRPD_RatioDist[13][0]->Fill(pRPD_ratio[13][0]);

                        pRPD_ratio[13][1] = TS2[n] / TS3[n];
                        pRPD_RatioDist[13][1]->Fill(pRPD_ratio[13][1]);

                        pRPD_ratio[13][2] = TS4[n] / TS5[n];
                        pRPD_RatioDist[13][2]->Fill(pRPD_ratio[13][2]);
                    }
                    if (channel[n] == 16)
                    {
                        pRPD_ratio[1][0] = TS0[n] / TS1[n];
                        pRPD_RatioDist[1][0]->Fill(pRPD_ratio[1][0]);

                        pRPD_ratio[1][1] = TS2[n] / TS3[n];
                        pRPD_RatioDist[1][1]->Fill(pRPD_ratio[1][1]);

                        pRPD_ratio[1][2] = TS4[n] / TS5[n];
                        pRPD_RatioDist[1][2]->Fill(pRPD_ratio[1][2]);
                    }
                } // end pos rpd
            } // end channel loop
        } // end 40 to 50 cent
    } // end event loop

    gStyle->SetOptFit();

    for (int n = 0; n < 16; n++)
    {
        pRPD_RatioDist[n][0]->SetXTitle("Ratio of TS0 to TS1");
        pRPD_RatioDist[n][0]->SetYTitle("Counts");

        pRPD_RatioDist[n][1]->SetXTitle("Ratio of TS2 to TS3");
        pRPD_RatioDist[n][1]->SetYTitle("Counts");

        pRPD_RatioDist[n][2]->SetXTitle("Ratio of TS4 to TS5");
        pRPD_RatioDist[n][2]->SetYTitle("Counts");
    }
    /*
    pRPD_RatioDist[0][0]->Fit("gaus","R","",1,3);
    pRPD_RatioDist[4][0]->Fit("gaus","R","",1,3);
    pRPD_RatioDist[8][0]->Fit("gaus","R","",1,3);
    pRPD_RatioDist[12][0]->Fit("gaus","R","",1,3);

    pRPD_RatioDist[1][0]->Fit("gaus","R","",1.5,3);
    pRPD_RatioDist[5][0]->Fit("gaus","R","",1.5,3);
    pRPD_RatioDist[9][0]->Fit("gaus","R","",1.5,3);
    pRPD_RatioDist[13][0]->Fit("gaus","R","",1.5,2.5);

    pRPD_RatioDist[2][0]->Fit("gaus","R","",1,2);
    pRPD_RatioDist[6][0]->Fit("gaus","R","",1,2);
    pRPD_RatioDist[10][0]->Fit("gaus","R","",1,2);
    pRPD_RatioDist[14][0]->Fit("gaus","R","",1,2);

    pRPD_RatioDist[3][0]->Fit("gaus","R","",1,2.5);
    pRPD_RatioDist[7][0]->Fit("gaus","R","",1,2.5);
    pRPD_RatioDist[11][0]->Fit("gaus","R","",1,2);
    pRPD_RatioDist[15][0]->Fit("gaus","R","",1,2);
    */
    //
    
    pRPD_RatioDist[0][1]->Fit("gaus","R","",1,3);
    pRPD_RatioDist[4][1]->Fit("gaus","R","",1,3);
    pRPD_RatioDist[8][1]->Fit("gaus","R","",1,3);
    pRPD_RatioDist[12][1]->Fit("gaus","R","",1,3);

    pRPD_RatioDist[1][1]->Fit("gaus","R","",1.5,3);
    pRPD_RatioDist[5][1]->Fit("gaus","R","",1.5,3);
    pRPD_RatioDist[9][1]->Fit("gaus","R","",1.5,3);
    pRPD_RatioDist[13][1]->Fit("gaus","R","",1.5,2.5);

    pRPD_RatioDist[2][1]->Fit("gaus","R","",1,2);
    pRPD_RatioDist[6][1]->Fit("gaus","R","",1,2);
    pRPD_RatioDist[10][1]->Fit("gaus","R","",1,2);
    pRPD_RatioDist[14][1]->Fit("gaus","R","",1,2);

    pRPD_RatioDist[3][1]->Fit("gaus","R","",1,2.5);
    pRPD_RatioDist[7][1]->Fit("gaus","R","",1,2.5);
    pRPD_RatioDist[11][1]->Fit("gaus","R","",1,2);
    pRPD_RatioDist[15][1]->Fit("gaus","R","",1,2);
    //

    pRPD_RatioDist[0][2]->Fit("gaus","R","",1,2.5);
    pRPD_RatioDist[4][2]->Fit("gaus","R","",1,2.5);
    pRPD_RatioDist[8][2]->Fit("gaus","R","",1,2.5);
    pRPD_RatioDist[12][2]->Fit("gaus","R","",1,2.5);

    pRPD_RatioDist[1][2]->Fit("gaus","R","",1.5,2.5);
    pRPD_RatioDist[5][2]->Fit("gaus","R","",1.5,2.5);
    pRPD_RatioDist[9][2]->Fit("gaus","R","",1.5,2.5);
    pRPD_RatioDist[13][2]->Fit("gaus","R","",1.5,2.5);

    pRPD_RatioDist[2][2]->Fit("gaus","R","",1.5,2.25);
    pRPD_RatioDist[6][2]->Fit("gaus","R","",1.5,2.25);
    pRPD_RatioDist[10][2]->Fit("gaus","R","",1.5,2.25);
    pRPD_RatioDist[14][2]->Fit("gaus","R","",1.5,2.25);

    pRPD_RatioDist[3][2]->Fit("gaus","R","",1.5,2.25);
    pRPD_RatioDist[7][2]->Fit("gaus","R","",1.5,2.25);
    pRPD_RatioDist[11][2]->Fit("gaus","R","",1.5,2);
    pRPD_RatioDist[15][2]->Fit("gaus","R","",1.5,2);
    

    TCanvas *c1 = new TCanvas();
    c1->Divide(4,4);
    for (int n = 0; n < 16; n++)
    {
        c1->cd(n+1);
        pRPD_RatioDist[n][0]->Draw();
    }

    TCanvas *c2 = new TCanvas();
    c2->Divide(4,4);
    for (int n = 0; n < 16; n++)
    {
        c2->cd(n+1);
        pRPD_RatioDist[n][1]->Draw();
    }

    TCanvas *c3 = new TCanvas();
    c3->Divide(4,4);
    for (int n = 0; n < 16; n++)
    {
        c3->cd(n+1);
        pRPD_RatioDist[n][2]->Draw();
    }


    if (zside[n] == 1 && section[n] == 1)
                {
                    if (channel[n] == 1)
                    {
                        pEM_ratio[0][0] = TS0[n] / TS1[n];
                        pEM_RatioDist[0][0]->Fill(pEM_ratio[0][0]);

                        pEM_ratio[0][1] = TS2[n] / TS3[n];
                        pEM_RatioDist[0][1]->Fill(pEM_ratio[0][1]);

                        pEM_ratio[0][2] = TS4[n] / TS5[n];
                        pEM_RatioDist[0][2]->Fill(pEM_ratio[0][2]);
                    }

                    if (channel[n] == 2)
                    {
                        pEM_ratio[1][0] = TS0[n] / TS1[n];
                        pEM_RatioDist[1][0]->Fill(pEM_ratio[1][0]);

                        pEM_ratio[1][1] = TS2[n] / TS3[n];
                        pEM_RatioDist[1][1]->Fill(pEM_ratio[1][1]);

                        pEM_ratio[1][2] = TS4[n] / TS5[n];
                        pEM_RatioDist[1][2]->Fill(pEM_ratio[1][2]);
                    }

                    if (channel[n] == 3)
                    {
                        pEM_ratio[2][0] = TS0[n] / TS1[n];
                        pEM_RatioDist[2][0]->Fill(pEM_ratio[2][0]);

                        pEM_ratio[2][1] = TS2[n] / TS3[n];
                        pEM_RatioDist[2][1]->Fill(pEM_ratio[2][1]);

                        pEM_ratio[2][2] = TS4[n] / TS5[n];
                        pEM_RatioDist[2][2]->Fill(pEM_ratio[2][2]);
                    }

                    if (channel[n] == 4)
                    {
                        pEM_ratio[3][0] = TS0[n] / TS1[n];
                        pEM_RatioDist[3][0]->Fill(pEM_ratio[3][0]);

                        pEM_ratio[3][1] = TS2[n] / TS3[n];
                        pEM_RatioDist[3][1]->Fill(pEM_ratio[3][1]);

                        pEM_ratio[3][2] = TS4[n] / TS5[n];
                        pEM_RatioDist[3][2]->Fill(pEM_ratio[3][2]);
                    }

                    if (channel[n] == 5)
                    {
                        pEM_ratio[4][0] = TS0[n] / TS1[n];
                        pEM_RatioDist[4][0]->Fill(pEM_ratio[4][0]);

                        pEM_ratio[4][1] = TS2[n] / TS3[n];
                        pEM_RatioDist[4][1]->Fill(pEM_ratio[4][1]);

                        pEM_ratio[4][2] = TS4[n] / TS5[n];
                        pEM_RatioDist[4][2]->Fill(pEM_ratio[4][2]);
                    }
                } // end pos em
                if (zside[n] == 1 && section[n] == 2)
                {
                    if (channel[n] == 1)
                    {
                        pHAD_ratio[0][0] = TS0[n] / TS1[n];
                        pHAD_RatioDist[0][0]->Fill(pHAD_ratio[0][0]);

                        pHAD_ratio[0][1] = TS2[n] / TS3[n];
                        pHAD_RatioDist[0][1]->Fill(pHAD_ratio[0][1]);

                        pHAD_ratio[0][2] = TS4[n] / TS5[n];
                        pHAD_RatioDist[0][2]->Fill(pHAD_ratio[0][2]);
                    }
                    if (channel[n] == 2)
                    {
                        pHAD_ratio[1][0] = TS0[n] / TS1[n];
                        pHAD_RatioDist[1][0]->Fill(pHAD_ratio[1][0]);

                        pHAD_ratio[1][1] = TS2[n] / TS3[n];
                        pHAD_RatioDist[1][1]->Fill(pHAD_ratio[1][1]);

                        pHAD_ratio[1][2] = TS4[n] / TS5[n];
                        pHAD_RatioDist[1][2]->Fill(pHAD_ratio[1][2]);
                    }
                    if (channel[n] == 3)
                    {
                        pHAD_ratio[2][0] = TS0[n] / TS1[n];
                        pHAD_RatioDist[2][0]->Fill(pHAD_ratio[2][0]);

                        pHAD_ratio[2][1] = TS2[n] / TS3[n];
                        pHAD_RatioDist[2][1]->Fill(pHAD_ratio[2][1]);

                        pHAD_ratio[2][2] = TS4[n] / TS5[n];
                        pHAD_RatioDist[2][2]->Fill(pHAD_ratio[2][2]);
                    }
                    if (channel[n] == 4)
                    {
                        pHAD_ratio[3][0] = TS0[n] / TS1[n];
                        pHAD_RatioDist[3][0]->Fill(pHAD_ratio[3][0]);

                        pHAD_ratio[3][1] = TS2[n] / TS3[n];
                        pHAD_RatioDist[3][1]->Fill(pHAD_ratio[3][1]);

                        pHAD_ratio[3][2] = TS4[n] / TS5[n];
                        pHAD_RatioDist[3][2]->Fill(pHAD_ratio[3][2]);
                    }
                } // end pos had


                TH1F *pEM_RatioDist[5][3] = {0};

    pEM_RatioDist[0][0] = new TH1F("","Run 374810 pos EM 1 Ratio TS0 to TS1 40 - 50% Centrality",30,0,3);
    pEM_RatioDist[1][0] = new TH1F("","Run 374810 pos EM 2 Ratio TS0 to TS1 40 - 50% Centrality",30,0,3);
    pEM_RatioDist[2][0] = new TH1F("","Run 374810 pos EM 3 Ratio TS0 to TS1 40 - 50% Centrality",30,0,3);
    pEM_RatioDist[3][0] = new TH1F("","Run 374810 pos EM 4 Ratio TS0 to TS1 40 - 50% Centrality",30,0,3);
    pEM_RatioDist[4][0] = new TH1F("","Run 374810 pos EM 5 Ratio TS0 to TS1 40 - 50% Centrality",30,0,3);

    pEM_RatioDist[0][1] = new TH1F("","Run 374810 pos EM 1 Ratio TS2 to TS3 40 - 50% Centrality",70,0,7);
    pEM_RatioDist[1][1] = new TH1F("","Run 374810 pos EM 2 Ratio TS2 to TS3 40 - 50% Centrality",70,0,7);
    pEM_RatioDist[2][1] = new TH1F("","Run 374810 pos EM 3 Ratio TS2 to TS3 40 - 50% Centrality",70,0,7);
    pEM_RatioDist[3][1] = new TH1F("","Run 374810 pos EM 4 Ratio TS2 to TS3 40 - 50% Centrality",70,0,7);
    pEM_RatioDist[4][1] = new TH1F("","Run 374810 pos EM 5 Ratio TS2 to TS3 40 - 50% Centrality",70,0,7);

    pEM_RatioDist[0][2] = new TH1F("","Run 374810 pos EM 1 Ratio TS4 to TS5 40 - 50% Centrality",70,0,7);
    pEM_RatioDist[1][2] = new TH1F("","Run 374810 pos EM 2 Ratio TS4 to TS5 40 - 50% Centrality",70,0,7);
    pEM_RatioDist[2][2] = new TH1F("","Run 374810 pos EM 3 Ratio TS4 to TS5 40 - 50% Centrality",70,0,7);
    pEM_RatioDist[3][2] = new TH1F("","Run 374810 pos EM 4 Ratio TS4 to TS5 40 - 50% Centrality",70,0,7);
    pEM_RatioDist[4][2] = new TH1F("","Run 374810 pos EM 5 Ratio TS4 to TS5 40 - 50% Centrality",70,0,7);

    TH1F *pHAD_RatioDist[4][3] = {0};

    pHAD_RatioDist[0][0] = new TH1F("","Run 374810 pos HAD 1 Ratio TS0 to TS1 40 - 50% Centrality",30,0,3);
    pHAD_RatioDist[1][0] = new TH1F("","Run 374810 pos HAD 2 Ratio TS0 to TS1 40 - 50% Centrality",30,0,3);
    pHAD_RatioDist[2][0] = new TH1F("","Run 374810 pos HAD 3 Ratio TS0 to TS1 40 - 50% Centrality",30,0,3);
    pHAD_RatioDist[3][0] = new TH1F("","Run 374810 pos HAD 4 Ratio TS0 to TS1 40 - 50% Centrality",30,0,3);

    pHAD_RatioDist[0][1] = new TH1F("","Run 374810 pos HAD 1 Ratio TS2 to TS3 40 - 50% Centrality",70,0,7);
    pHAD_RatioDist[1][1] = new TH1F("","Run 374810 pos HAD 2 Ratio TS2 to TS3 40 - 50% Centrality",70,0,7);
    pHAD_RatioDist[2][1] = new TH1F("","Run 374810 pos HAD 3 Ratio TS2 to TS3 40 - 50% Centrality",70,0,7);
    pHAD_RatioDist[3][1] = new TH1F("","Run 374810 pos HAD 4 Ratio TS2 to TS3 40 - 50% Centrality",70,0,7);

    pHAD_RatioDist[0][2] = new TH1F("","Run 374810 pos HAD 1 Ratio TS4 to TS5 40 - 50% Centrality",70,0,7);
    pHAD_RatioDist[1][2] = new TH1F("","Run 374810 pos HAD 2 Ratio TS4 to TS5 40 - 50% Centrality",70,0,7);
    pHAD_RatioDist[2][2] = new TH1F("","Run 374810 pos HAD 3 Ratio TS4 to TS5 40 - 50% Centrality",70,0,7);
    pHAD_RatioDist[3][2] = new TH1F("","Run 374810 pos HAD 4 Ratio TS4 to TS5 40 - 50% Centrality",70,0,7);

    

   

     
